from flask import Flask, request, jsonify
import psycopg2
import time

app = Flask(__name__)

# –ñ–¥—ë–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ë–î
for i in range(10):
    try:
        conn = psycopg2.connect(
            host="db",
            database="docker",
            user="postgres",
            password="postgres"
        )
        cur = conn.cursor()
        break
    except Exception as e:
        print("‚è≥ –ñ–¥—ë–º PostgreSQL...")
        time.sleep(1)
else:
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î.")
    exit(1)

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cur.execute("""
    CREATE TABLE IF NOT EXISTS messages (
        id SERIAL PRIMARY KEY,
        text TEXT NOT NULL
    )
""")
conn.commit()


@app.route('/')
def index():
    return "12112232132211üî• –û–±–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ self-hosted CI/CD!"

@app.route('/data', methods=['GET'])
def get_data():
    cur.execute("SELECT * FROM messages")
    rows = cur.fetchall()
    return jsonify(rows)

@app.route('/data', methods=['POST'])
def post_data():
    data = request.get_json()
    if not data or 'message' not in data:
        return jsonify({'error': '–ü–æ–ª–µ \"message\" –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'}), 400

    message = data['message']
    cur.execute("INSERT INTO messages (text) VALUES (%s) RETURNING id", (message,))
    new_id = cur.fetchone()[0]
    conn.commit()
    return jsonify({'status': 'ok', 'id': new_id})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
